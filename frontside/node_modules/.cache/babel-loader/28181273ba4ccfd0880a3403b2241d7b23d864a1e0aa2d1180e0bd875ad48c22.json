{"ast":null,"code":"import{patchDataApi,postDataApi,deleteDataApi,getDataApi}from\"../../utils/fetchDataApi\";import{POST_TYPES}from\"./postActions\";import{EditData,DeleteData}from\"./alertActions\";import{createNotify,removeNotify}from\"./notifyActions\";export const MESS_TYPE={ADD_USER:\"ADD_USER\",ADD_MESSAGE:\"ADD_MESSAGE\",GET_CONVERSATION:\"GET_CONVERSATION\",GET_MESSAGE:\"GET_MESSAGE\",DELETE_MESSAGE:\"DELETE_MESSAGE\"};export const AddUser=_ref=>{let{user,message}=_ref;return async dispatch=>{if(message.users.every(item=>item._id!==user._id)){dispatch({type:MESS_TYPE.ADD_USER,payload:user});}};};export const addMessage=_ref2=>{let{auth,msg,socket}=_ref2;return async dispatch=>{dispatch({type:MESS_TYPE.ADD_MESSAGE,payload:msg});socket.emit('addMessage',msg);try{await postDataApi('message',msg,auth.token);}catch(err){dispatch({type:'ALERT',payload:{error:\"there is a error\"}});}};};export const getConversations=auth=>async dispatch=>{try{const res=await getDataApi('conversations',auth.token);let newArr=[];res.data.conversation.forEach(item=>{item.recipients.forEach(cv=>{if(cv._id!==auth.user._id){newArr.push({...cv,text:item.text,media:item.media});}});});dispatch({type:MESS_TYPE.GET_CONVERSATION,payload:{newArr,result:res.data.result}});}catch(err){dispatch({type:'ALERT',payload:{error:\"there is a error\"}});}};export const getMessages=_ref3=>{let{auth,id}=_ref3;return async dispatch=>{try{const res=await getDataApi(\"message/\".concat(id),auth.token);dispatch({type:MESS_TYPE.GET_MESSAGE,payload:res.data});}catch(err){dispatch({type:'ALERT',payload:{error:\"there is a error\"}});}};};export const deleteMessage=_ref4=>{let{message,data,auth}=_ref4;return async dispatch=>{const newData=DeleteData(message.data,data._id);dispatch({type:MESS_TYPE.DELETE_MESSAGE,payload:{newData,_id:data.recipient}});try{await deleteDataApi(\"message/\".concat(data._id),auth.token);}catch(err){dispatch({type:'ALERT',payload:{error:\"there is a error\"}});}};};","map":{"version":3,"names":["patchDataApi","postDataApi","deleteDataApi","getDataApi","POST_TYPES","EditData","DeleteData","createNotify","removeNotify","MESS_TYPE","ADD_USER","ADD_MESSAGE","GET_CONVERSATION","GET_MESSAGE","DELETE_MESSAGE","AddUser","_ref","user","message","dispatch","users","every","item","_id","type","payload","addMessage","_ref2","auth","msg","socket","emit","token","err","error","getConversations","res","newArr","data","conversation","forEach","recipients","cv","push","text","media","result","getMessages","_ref3","id","concat","deleteMessage","_ref4","newData","recipient"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/redux/actions/messageActions.js"],"sourcesContent":["import {patchDataApi, postDataApi , deleteDataApi, getDataApi} from \"../../utils/fetchDataApi\"\nimport {POST_TYPES} from \"./postActions\"\nimport {EditData, DeleteData} from \"./alertActions\"\nimport {createNotify, removeNotify} from \"./notifyActions\"\n\nexport const MESS_TYPE = {\n    ADD_USER: \"ADD_USER\",\n    ADD_MESSAGE:\"ADD_MESSAGE\",\n    GET_CONVERSATION:\"GET_CONVERSATION\",\n    GET_MESSAGE:\"GET_MESSAGE\",\n    DELETE_MESSAGE:\"DELETE_MESSAGE\"\n}\n\nexport const AddUser = ({user, message}) => async (dispatch) => {\n   if(message.users.every(item => item._id !== user._id)){\n       dispatch({type:MESS_TYPE.ADD_USER, payload: user})\n   }\n}\n\nexport const addMessage = ({auth, msg, socket}) => async(dispatch) => {\n    \n    dispatch({type: MESS_TYPE.ADD_MESSAGE , payload: msg})\n    socket.emit('addMessage' , msg)\n    try{\n        await postDataApi('message', msg, auth.token)\n\n    }\n    catch(err){\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: \"there is a error\"\n           }\n   })\n    }\n}\n\nexport const getConversations = (auth) => async(dispatch) =>{\n    try {\n        \n        const res = await getDataApi('conversations', auth.token)\n        let newArr = [];\n        res.data.conversation.forEach(item =>{\n            item.recipients.forEach(cv=>{\n                if(cv._id !== auth.user._id){\n                    newArr.push({...cv, text:item.text, media:item.media})\n                }\n            })\n        })\n        dispatch({type: MESS_TYPE.GET_CONVERSATION, payload: {newArr, result: res.data.result}})\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: \"there is a error\"\n           }\n   })\n    \n    }\n\n}\n\nexport const getMessages = ({auth, id}) => async (dispatch) =>{\n    try {\n        const res= await getDataApi(`message/${id}`, auth.token)\n        dispatch({type:MESS_TYPE.GET_MESSAGE, payload: res.data})\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: \"there is a error\"\n           }\n   })\n    }\n}\n\nexport const deleteMessage = ({message, data, auth}) => async (dispatch) =>{\n    \n    const newData = DeleteData(message.data, data._id)\n   \n    dispatch({type: MESS_TYPE.DELETE_MESSAGE , payload : { newData, _id: data.recipient}})\n    try {\n       await deleteDataApi(`message/${data._id}`, auth.token)\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: \"there is a error\"\n           }\n   })\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}