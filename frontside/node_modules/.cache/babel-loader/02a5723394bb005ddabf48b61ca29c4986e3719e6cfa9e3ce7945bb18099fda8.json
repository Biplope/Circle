{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from\"react-redux\";import{getDataApi}from\"../utils/fetchDataApi\";import UserCardMessages from'./UserCardMessages';import{AddUser,getConversations}from\"../redux/actions/messageActions\";import{useHistory}from\"react-router-dom\";import FiberManualRecordIcon from'@material-ui/icons/FiberManualRecord';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const LeftSideMessage=()=>{var _message$users,_message$users2;const[search,setSearch]=useState('');const[searchUser,setSearchUser]=useState([]);const[load,setLoad]=useState(false);const{auth,message}=useSelector(state=>state);const history=useHistory();const dispatch=useDispatch();useEffect(()=>{if(message.firstLoad)return;dispatch(getConversations(auth));},[dispatch,auth,message.firstLoad]);const handleSearch=async e=>{e.preventDefault();if(!search)return;try{setLoad(true);const res=await getDataApi(\"search?username=\".concat(search),auth.token);setSearchUser(res.data.users);setLoad(false);}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}};const handleAddChat=user=>{setSearch('');setSearchUser([]);dispatch(AddUser({user,message}));history.push(\"/message/\".concat(user._id));};return/*#__PURE__*/_jsxs(\"div\",{className:\"leftsidecontent\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"leftsidecontentsearch\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"leftsidecontentsearchinput\",type:\"text\",value:search,onChange:e=>setSearch(e.target.value),placeholder:\"find the user for chat\"}),/*#__PURE__*/_jsx(\"button\",{className:\"leftsidecontentsearchbutton\",onClick:handleSearch,children:\" Search \"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"leftsidecontentuserlist\",children:searchUser.length!==0?/*#__PURE__*/_jsx(_Fragment,{children:searchUser.map((user,index)=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>handleAddChat(user),children:/*#__PURE__*/_jsx(UserCardMessages,{user:user})},index))}):/*#__PURE__*/_jsx(_Fragment,{children:((_message$users=message.users)===null||_message$users===void 0?void 0:_message$users.length)>0&&((_message$users2=message.users)===null||_message$users2===void 0?void 0:_message$users2.map((user,index)=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>handleAddChat(user),children:/*#__PURE__*/_jsx(UserCardMessages,{user:user,msg:true,children:/*#__PURE__*/_jsx(FiberManualRecordIcon,{})})},index)))})})]});};export default LeftSideMessage;","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getDataApi","UserCardMessages","AddUser","getConversations","useHistory","FiberManualRecordIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LeftSideMessage","_message$users","_message$users2","search","setSearch","searchUser","setSearchUser","load","setLoad","auth","message","state","history","dispatch","firstLoad","handleSearch","e","preventDefault","res","concat","token","data","users","err","type","payload","error","response","msg","handleAddChat","user","push","_id","className","children","value","onChange","target","placeholder","onClick","length","map","index"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/components/LeftSideMessage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {getDataApi} from \"../utils/fetchDataApi\"\nimport UserCardMessages from './UserCardMessages';\nimport {AddUser, getConversations } from \"../redux/actions/messageActions\"\nimport {useHistory} from \"react-router-dom\"\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nconst LeftSideMessage = () => {\n    const [search , setSearch] = useState('')\n    const [searchUser, setSearchUser] = useState([])\n    const [load, setLoad] = useState(false)\n    const {auth, message} = useSelector(state => state)\n    const history = useHistory()\n\n    const dispatch = useDispatch();\n\n   \n\n\n     useEffect(()=>{\n         if(message.firstLoad) return;\n         dispatch(getConversations(auth))\n     },[dispatch, auth, message.firstLoad])\n\n    const handleSearch = async (e) =>{\n        e.preventDefault();\n        if(!search) return;\n  \n        try {\n           setLoad(true)\n           const res = await getDataApi(`search?username=${search}`,auth.token);\n           setSearchUser(res.data.users)\n           setLoad(false)\n        } catch (err) {\n           dispatch({\n              type:'ALERT',\n              payload:{\n                 error: err.response.data.msg\n              }\n           })\n        }\n        \n     }\n\n     const handleAddChat = (user) => {\n        setSearch('')\n        setSearchUser([])\n        dispatch(AddUser({user, message}))\n        history.push(`/message/${user._id}`)\n     }\n\n    return (\n        <div className=\"leftsidecontent\">\n            <div className=\"leftsidecontentsearch\">\n                <input className=\"leftsidecontentsearchinput\" type=\"text\" value={search} onChange={(e)=>setSearch(e.target.value)}\n                    placeholder=\"find the user for chat\"\n                />\n                <button className=\"leftsidecontentsearchbutton\" onClick={handleSearch}> Search </button>\n            </div>\n           \n            <div className=\"leftsidecontentuserlist\">\n               {\n                   searchUser.length !== 0 \n                   ? <>\n                   {\n                   searchUser.map((user,index) => (\n                      <div  onClick={()=>handleAddChat(user)} key={index} >\n                       <UserCardMessages  user={user} />\n                       </div>\n                   ))\n}\n                   </>\n                   :\n                   <>\n                                {\n                   message.users?.length> 0 && message.users?.map((user,index) => (\n                      <div  onClick={()=>handleAddChat(user)} key={index} >\n                       <UserCardMessages  user={user} msg={true}>\n                            <FiberManualRecordIcon/>\n                           </UserCardMessages>\n                       </div>\n                   ))\n}\n                   </>\n               }\n            </div>\n        </div>\n    )\n}\n\n\nexport default LeftSideMessage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAElD,OAAQC,WAAW,CAAEC,WAAW,KAAO,aAAa,CACpD,OAAQC,UAAU,KAAO,uBAAuB,CAChD,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CACjD,OAAQC,OAAO,CAAEC,gBAAgB,KAAQ,iCAAiC,CAC1E,OAAQC,UAAU,KAAO,kBAAkB,CAC3C,MAAO,CAAAC,qBAAqB,KAAM,sCAAsC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEzE,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,KAAAC,cAAA,CAAAC,eAAA,CAC1B,KAAM,CAACC,MAAM,CAAGC,SAAS,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACzC,KAAM,CAACoB,UAAU,CAAEC,aAAa,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACsB,IAAI,CAAEC,OAAO,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACvC,KAAM,CAACwB,IAAI,CAAEC,OAAO,CAAC,CAAGxB,WAAW,CAACyB,KAAK,EAAIA,KAAK,CAAC,CACnD,KAAM,CAAAC,OAAO,CAAGpB,UAAU,CAAC,CAAC,CAE5B,KAAM,CAAAqB,QAAQ,CAAG1B,WAAW,CAAC,CAAC,CAK7BH,SAAS,CAAC,IAAI,CACV,GAAG0B,OAAO,CAACI,SAAS,CAAE,OACtBD,QAAQ,CAACtB,gBAAgB,CAACkB,IAAI,CAAC,CAAC,CACpC,CAAC,CAAC,CAACI,QAAQ,CAAEJ,IAAI,CAAEC,OAAO,CAACI,SAAS,CAAC,CAAC,CAEvC,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAI,CAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAG,CAACd,MAAM,CAAE,OAEZ,GAAI,CACDK,OAAO,CAAC,IAAI,CAAC,CACb,KAAM,CAAAU,GAAG,CAAG,KAAM,CAAA9B,UAAU,oBAAA+B,MAAA,CAAoBhB,MAAM,EAAGM,IAAI,CAACW,KAAK,CAAC,CACpEd,aAAa,CAACY,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC,CAC7Bd,OAAO,CAAC,KAAK,CAAC,CACjB,CAAE,MAAOe,GAAG,CAAE,CACXV,QAAQ,CAAC,CACNW,IAAI,CAAC,OAAO,CACZC,OAAO,CAAC,CACLC,KAAK,CAAEH,GAAG,CAACI,QAAQ,CAACN,IAAI,CAACO,GAC5B,CACH,CAAC,CAAC,CACL,CAEH,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIC,IAAI,EAAK,CAC7B1B,SAAS,CAAC,EAAE,CAAC,CACbE,aAAa,CAAC,EAAE,CAAC,CACjBO,QAAQ,CAACvB,OAAO,CAAC,CAACwC,IAAI,CAAEpB,OAAO,CAAC,CAAC,CAAC,CAClCE,OAAO,CAACmB,IAAI,aAAAZ,MAAA,CAAaW,IAAI,CAACE,GAAG,CAAE,CAAC,CACvC,CAAC,CAEF,mBACInC,KAAA,QAAKoC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5BrC,KAAA,QAAKoC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClCvC,IAAA,UAAOsC,SAAS,CAAC,4BAA4B,CAACT,IAAI,CAAC,MAAM,CAACW,KAAK,CAAEhC,MAAO,CAACiC,QAAQ,CAAGpB,CAAC,EAAGZ,SAAS,CAACY,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE,CAC9GG,WAAW,CAAC,wBAAwB,CACvC,CAAC,cACF3C,IAAA,WAAQsC,SAAS,CAAC,6BAA6B,CAACM,OAAO,CAAExB,YAAa,CAAAmB,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACvF,CAAC,cAENvC,IAAA,QAAKsC,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAEjC7B,UAAU,CAACmC,MAAM,GAAK,CAAC,cACrB7C,IAAA,CAAAI,SAAA,EAAAmC,QAAA,CAEF7B,UAAU,CAACoC,GAAG,CAAC,CAACX,IAAI,CAACY,KAAK,gBACvB/C,IAAA,QAAM4C,OAAO,CAAEA,CAAA,GAAIV,aAAa,CAACC,IAAI,CAAE,CAAAI,QAAA,cACtCvC,IAAA,CAACN,gBAAgB,EAAEyC,IAAI,CAAEA,IAAK,CAAE,CAAC,EADWY,KAEvC,CACR,CAAC,CAEA,CAAC,cAEH/C,IAAA,CAAAI,SAAA,EAAAmC,QAAA,CAEA,EAAAjC,cAAA,CAAAS,OAAO,CAACY,KAAK,UAAArB,cAAA,iBAAbA,cAAA,CAAeuC,MAAM,EAAE,CAAC,IAAAtC,eAAA,CAAIQ,OAAO,CAACY,KAAK,UAAApB,eAAA,iBAAbA,eAAA,CAAeuC,GAAG,CAAC,CAACX,IAAI,CAACY,KAAK,gBACvD/C,IAAA,QAAM4C,OAAO,CAAEA,CAAA,GAAIV,aAAa,CAACC,IAAI,CAAE,CAAAI,QAAA,cACtCvC,IAAA,CAACN,gBAAgB,EAAEyC,IAAI,CAAEA,IAAK,CAACF,GAAG,CAAE,IAAK,CAAAM,QAAA,cACpCvC,IAAA,CAACF,qBAAqB,GAAC,CAAC,CACP,CAAC,EAHqBiD,KAIvC,CACR,CAAC,EAEA,CAAC,CAEL,CAAC,EACL,CAAC,CAEd,CAAC,CAGD,cAAe,CAAA1C,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}