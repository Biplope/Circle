{"ast":null,"code":"import { DeleteData } from \"./alertActions\";\nimport { getDataApi, patchDataApi } from '../../utils/fetchDataApi';\nimport { imageupload } from \"../../utils/imageupload\";\nimport axios from \"axios\";\nimport { createNotify, removeNotify } from \"./notifyActions\";\nexport const PROFILE_TYPES = {\n  LOADING: 'LOADING',\n  GET_USER: 'GET_USER',\n  FRIEND: 'FRIEND',\n  UNFRIEND: 'UNFRIEND',\n  GET_IDS: \"GET_IDS\",\n  USERPOSTS: \"USERPOSTS\"\n};\nexport const getProfileUsers = ({\n  users,\n  id,\n  auth\n}) => async dispatch => {\n  if (users.every(item => item._id !== id)) {\n    try {\n      dispatch({\n        type: PROFILE_TYPES.LOADING,\n        payload: {\n          loading: true\n        }\n      });\n      const res = await getDataApi(`user/${id}`, auth.token);\n      const user = res;\n      console.log(user);\n      dispatch({\n        type: PROFILE_TYPES.GET_USER,\n        payload: user.data.user\n      });\n      dispatch({\n        type: PROFILE_TYPES.LOADING,\n        payload: {\n          loading: false\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ALERT',\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  }\n};\nexport const getProfileUsersPost = ({\n  profil,\n  id,\n  auth\n}) => async dispatch => {\n  if (profil.every(item => item._id !== id)) {\n    //  dispatch({type:PROFILE_TYPES.GET_IDS , payload: id })\n    try {\n      dispatch({\n        type: PROFILE_TYPES.LOADING,\n        payload: {\n          loading: true\n        }\n      });\n      const res1 = await getDataApi(`userposts/${id}`, auth.token);\n      const posts = res1;\n      dispatch({\n        type: PROFILE_TYPES.USERPOSTS,\n        payload: {\n          ...posts.data,\n          _id: id\n        }\n      });\n      dispatch({\n        type: PROFILE_TYPES.LOADING,\n        payload: {\n          loading: false\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ALERT',\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  }\n};\nexport const updateProfile = ({\n  editData,\n  avatar,\n  auth\n}) => async dispatch => {\n  if (!editData.fullname) return dispatch({\n    type: \"ALERT\",\n    payload: {\n      error: \"Add you fullname\"\n    }\n  });\n  if (editData.fullname.length > 25) return dispatch({\n    type: \"ALERT\",\n    payload: {\n      error: \"Fullname tooo long\"\n    }\n  });\n  if (editData.story.length > 200) return dispatch({\n    type: \"ALERT\",\n    payload: {\n      error: \"story too long\"\n    }\n  });\n  try {\n    let media;\n    dispatch({\n      type: \"ALERT\",\n      payload: {\n        loading: true\n      }\n    });\n    if (avatar) media = await imageupload([avatar]);\n    const res = await axios.patch(\"http://localhost:5000/api/user\", {\n      ...editData,\n      avatar: avatar ? media[0].secure_url : auth.user.avatar\n    }, {\n      headers: {\n        Authorization: auth.token\n      }\n    });\n    dispatch({\n      type: 'AUTH',\n      payload: {\n        ...auth,\n        user: {\n          ...auth.user,\n          ...editData,\n          avatar: avatar ? media[0].secure_url : auth.user.avatar\n        }\n      }\n    });\n    dispatch({\n      type: \"ALERT\",\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const addfriends = ({\n  users,\n  user,\n  auth,\n  socket\n}) => async dispatch => {\n  let newUser;\n  if (users.every(item => item._id !== user._id)) {\n    newUser = {\n      ...user,\n      friends: [...user.friends, auth.user]\n    };\n  } else {\n    users.forEach(item => {\n      if (item._id === user._id) {\n        newUser = {\n          ...item,\n          friends: [...item.friends, auth.user]\n        };\n      }\n    });\n  }\n  dispatch({\n    type: PROFILE_TYPES.FRIEND,\n    payload: newUser\n  });\n  dispatch({\n    type: 'AUTH',\n    payload: {\n      ...auth,\n      user: {\n        ...auth.user,\n        following: [...auth.user.following, newUser]\n      }\n    }\n  });\n  try {\n    const res = await patchDataApi(`user/${user._id}/friend`, null, auth.token);\n    socket.emit('addfriend', res.data.newUser);\n    const msg = {\n      id: auth.user._id,\n      text: 'add you as friend you',\n      url: `/profile/${auth.user._id}`,\n      recipients: [newUser._id]\n    };\n    dispatch(createNotify({\n      msg,\n      auth,\n      socket\n    }));\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const unfriends = ({\n  users,\n  user,\n  auth,\n  socket\n}) => async dispatch => {\n  let newUser;\n  if (users.every(item => item._id !== user._id)) {\n    newUser = {\n      ...user,\n      friends: DeleteData(user.friends, auth.user._id)\n    };\n  } else {\n    users.forEach(item => {\n      if (item._id === user._id) {\n        newUser = {\n          ...item,\n          friends: DeleteData(item.friends, auth.user._id)\n        };\n      }\n    });\n  }\n  dispatch({\n    type: PROFILE_TYPES.UNFRIEND,\n    payload: newUser\n  });\n  dispatch({\n    type: 'AUTH',\n    payload: {\n      ...auth,\n      user: {\n        ...auth.user,\n        following: DeleteData(auth.user.following, newUser._id)\n      }\n    }\n  });\n  try {\n    const res = await patchDataApi(`user/${user._id}/unfriend`, null, auth.token);\n    socket.emit('unfriend', res.data.newUser);\n    const msg = {\n      id: auth.user._id,\n      text: 'unfriend you',\n      url: `/profile/${auth.user._id}`,\n      recipients: [newUser._id]\n    };\n    dispatch(removeNotify({\n      msg,\n      auth,\n      socket\n    }));\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"names":["DeleteData","getDataApi","patchDataApi","imageupload","axios","createNotify","removeNotify","PROFILE_TYPES","LOADING","GET_USER","FRIEND","UNFRIEND","GET_IDS","USERPOSTS","getProfileUsers","users","id","auth","dispatch","every","item","_id","type","payload","loading","res","token","user","console","log","data","err","error","response","msg","getProfileUsersPost","profil","res1","posts","updateProfile","editData","avatar","fullname","length","story","media","patch","secure_url","headers","Authorization","addfriends","socket","newUser","friends","forEach","following","emit","text","url","recipients","unfriends"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/Circle/frontside/src/redux/actions/profileActions.js"],"sourcesContent":["import { DeleteData} from \"./alertActions\"\nimport {getDataApi, patchDataApi} from '../../utils/fetchDataApi'\nimport {imageupload} from \"../../utils/imageupload\"\nimport axios from \"axios\";\nimport {createNotify, removeNotify} from \"./notifyActions\"\n\nexport const PROFILE_TYPES = {\n    LOADING : 'LOADING',\n    GET_USER : 'GET_USER',\n    FRIEND:'FRIEND',\n    UNFRIEND:'UNFRIEND',\n    GET_IDS:\"GET_IDS\",\n    USERPOSTS:\"USERPOSTS\"\n\n}\n\nexport const getProfileUsers = ({users,id, auth}) => async (dispatch) =>{\n    if(users.every(item => item._id !== id)){\n           try {\n            dispatch({type: PROFILE_TYPES.LOADING, payload:{loading:true}})\n            const res =  await getDataApi(`user/${id}`, auth.token)\n      \n\n            const user = res;\n          \n           \n         \n            console.log(user)\n            \n            dispatch({\n                type:PROFILE_TYPES.GET_USER,\n                payload:user.data.user\n            })\n           \n            dispatch({type: PROFILE_TYPES.LOADING, payload:{loading:false}})\n            \n        } catch (err) {\n            dispatch({\n                type:'ALERT',\n                payload:{\n                    error: err.response.data.msg\n                }\n            })\n        }\n    }\n}\nexport const getProfileUsersPost = ({profil,id, auth}) => async (dispatch) =>{\n    if(profil.every(item => item._id !== id)){\n    //  dispatch({type:PROFILE_TYPES.GET_IDS , payload: id })\n        try {\n            dispatch({type: PROFILE_TYPES.LOADING, payload:{loading:true}})\n            \n            const res1 = await getDataApi(`userposts/${id}`,auth.token)\n\n           \n            const posts = res1;\n           \n         \n      \n            \n         \n            dispatch({\n                type:PROFILE_TYPES.USERPOSTS,\n                payload: {...posts.data, _id:id}\n            })\n            dispatch({type: PROFILE_TYPES.LOADING, payload:{loading:false}})\n            \n        } catch (err) {\n            dispatch({\n                type:'ALERT',\n                payload:{\n                    error: err.response.data.msg\n                }\n            })\n        }\n    }\n}\n\nexport const updateProfile = ({editData,avatar, auth}) =>async (dispatch) =>{\n    if(!editData.fullname) return dispatch({type:\"ALERT\", payload:{error:\"Add you fullname\"}})\n    if(editData.fullname.length > 25) return dispatch({type:\"ALERT\", payload:{error:\"Fullname tooo long\"}})\n    if(editData.story.length >200) return dispatch({type:\"ALERT\", payload:{error:\"story too long\"}})\n\n    try {\n        let media;\n\n        dispatch({type:\"ALERT\", payload : {loading: true}})\n        if(avatar) media = await imageupload([avatar])\n\n        const res = await axios.patch(\"http://localhost:5000/api/user\", {\n            ...editData,\n            avatar: avatar ? media[0].secure_url  : auth.user.avatar  \n        },\n        {\n            headers : {Authorization: auth.token}\n         } )\n         \n         \n        dispatch({\n            type:'AUTH',\n            payload: {\n                    ...auth,\n                    user:{\n                        ...auth.user,\n                        ...editData,\n                        avatar: avatar ? media[0].secure_url : auth.user.avatar\n                    }\n            }\n        })\n\n        dispatch({type:\"ALERT\", payload : {loading: false}})\n        \n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: err.response.data.msg\n            }\n        })\n    }\n}\n\nexport const addfriends = ({users, user, auth,socket}) => async (dispatch) =>{\nlet newUser;\nif(users.every(item => item._id !== user._id)){\n    newUser = {...user, friends:[...user.friends, auth.user]}\n}else {\n    users.forEach(item =>{\n        if(item._id === user._id){\n            newUser = {...item, friends:[...item.friends, auth.user]}\n        }\n    })\n}\n\n\n    \n   \n    dispatch({\n        type: PROFILE_TYPES.FRIEND,\n        payload:newUser\n        \n    })\n\n    dispatch ({\n        type:'AUTH',\n        payload : {\n            ...auth, \n            user: {...auth.user , following: [...auth.user.following, newUser]}\n        }\n    })\n\n  \n    try {\n        const res = await patchDataApi(`user/${user._id}/friend`, null, auth.token)\n        socket.emit('addfriend', res.data.newUser)\n        \n        const msg = {\n            id: auth.user._id,\n            text: 'add you as friend you',\n            url: `/profile/${auth.user._id}`,\n            recipients: [newUser._id],\n            \n\n        }\n        dispatch(createNotify({msg, auth, socket}))\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: err.response.data.msg\n            }\n        })\n    }\n}\n\nexport const unfriends = ({users, user, auth,socket}) => async (dispatch) =>{\n\n    \n    \nlet newUser;\nif(users.every(item => item._id !== user._id)){\n    newUser = {...user, friends: DeleteData(user.friends, auth.user._id)}\n}else {\n    users.forEach(item =>{\n        if(item._id === user._id){\n            newUser = {...item, friends: DeleteData(item.friends, auth.user._id)}\n        }\n    })\n}\n \n   dispatch({\n        type: PROFILE_TYPES.UNFRIEND,\n        payload:newUser\n        \n    }) \n\n    dispatch ({\n        type:'AUTH',\n        payload : {\n            ...auth, \n            user: {...auth.user , following:DeleteData(auth.user.following, newUser._id)}\n        }\n    })\n  \n    try {\n\n        const res = await patchDataApi(`user/${user._id}/unfriend`, null, auth.token)\n        socket.emit('unfriend', res.data.newUser)\n\n        const msg = {\n            id: auth.user._id,\n            text: 'unfriend you',\n            url: `/profile/${auth.user._id}`,\n            recipients: [newUser._id],\n            \n\n        }\n        dispatch(removeNotify({msg, auth, socket}))\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: err.response.data.msg\n            }\n        })\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}