{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from\"react-redux\";import{POST_TYPES}from\"./redux/actions/postActions\";import{NOTIFY_TYPES}from\"./redux/actions/notifyActions\";import{MESS_TYPE}from\"./redux/actions/messageActions\";import{Fragment as _Fragment,jsx as _jsx}from\"react/jsx-runtime\";const SocketioClient=()=>{const{auth,socket}=useSelector(state=>state);const dispatch=useDispatch();useEffect(()=>{socket.emit('joinUser',auth.user._id);},[socket,auth.user._id]);useEffect(()=>{socket.on('likeToClient',newPost=>{dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});});return()=>socket.off('likeToClient');},[socket,dispatch]);useEffect(()=>{socket.on('unlikeToClient',newPost=>{dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});});return()=>socket.off('unlikeToClient');},[socket,dispatch]);useEffect(()=>{socket.on('createCommentToClient',newPost=>{dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});});return()=>socket.off('createCommentToClient');},[socket,dispatch]);useEffect(()=>{socket.on('deleteCommentToClient',newPost=>{dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});});return()=>socket.off('deleteCommentToClient');},[socket,dispatch]);useEffect(()=>{socket.on('addfriendToClient',newUser=>{dispatch({type:'AUTH',payload:{...auth,user:newUser}});});return()=>socket.off('addfriendToClient');},[socket,dispatch,auth]);useEffect(()=>{socket.on('unfriendToClient',newUser=>{dispatch({type:'AUTH',payload:{...auth,user:newUser}});});return()=>socket.off('unfriendToClient');},[socket,dispatch,auth]);useEffect(()=>{socket.on('createNotifyToClient',msg=>{dispatch({type:NOTIFY_TYPES.CREATE_NOTIFIES,payload:msg});});return()=>socket.off('createNotifyToClient');},[socket,dispatch]);useEffect(()=>{socket.on('removeNotifyToClient',msg=>{dispatch({type:NOTIFY_TYPES.REMOVE_NOTIFIES,payload:msg});});return()=>socket.off('removeNotifyToClient');},[socket,dispatch]);useEffect(()=>{socket.on('addMessageToclient',msg=>{dispatch({type:MESS_TYPE.ADD_MESSAGE,payload:msg});});return()=>socket.off('addMessageToclient');},[socket,dispatch]);return/*#__PURE__*/_jsx(_Fragment,{});};export default SocketioClient;","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","POST_TYPES","NOTIFY_TYPES","MESS_TYPE","Fragment","_Fragment","jsx","_jsx","SocketioClient","auth","socket","state","dispatch","emit","user","_id","on","newPost","type","UPDATE_POST","payload","off","newUser","msg","CREATE_NOTIFIES","REMOVE_NOTIFIES","ADD_MESSAGE"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/SocketioClient.js"],"sourcesContent":["import React , {useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {POST_TYPES} from \"./redux/actions/postActions\";\nimport {NOTIFY_TYPES} from \"./redux/actions/notifyActions\";\nimport {MESS_TYPE} from \"./redux/actions/messageActions\";\n\nconst SocketioClient = () =>{\n\n    const {auth, socket} = useSelector(state => state);\n    const dispatch = useDispatch();\n\n\n    useEffect (()=>{\n\n    socket.emit('joinUser', auth.user._id)\n \n    },[socket, auth.user._id])\n\n    useEffect(()=>{\n        socket.on('likeToClient', newPost => {\n           \n        dispatch({type:POST_TYPES.UPDATE_POST, payload: newPost})})\n        return ()=>socket.off('likeToClient')\n    },[socket,dispatch])\n\n    useEffect(()=>{\n        socket.on('unlikeToClient', newPost=>{\n        dispatch({type:POST_TYPES.UPDATE_POST, payload: newPost})})\n        return ()=>socket.off('unlikeToClient')\n    },[socket,dispatch])\n\n    useEffect(()=>{\n        socket.on('createCommentToClient', newPost => {\n        dispatch({type:POST_TYPES.UPDATE_POST, payload: newPost})})\n        return ()=>socket.off('createCommentToClient')\n    },[socket,dispatch])\n\n\n    useEffect(()=>{\n        socket.on('deleteCommentToClient', newPost=>{\n        dispatch({type:POST_TYPES.UPDATE_POST, payload: newPost})})\n        return ()=>socket.off('deleteCommentToClient')\n    },[socket,dispatch])\n\n    useEffect(()=>{\n        socket.on('addfriendToClient', newUser =>{\n        dispatch({type:'AUTH', payload: {...auth, user: newUser}})})\n\n        return ()=>socket.off('addfriendToClient')\n    },[socket,dispatch,auth])\n\n     useEffect(()=>{\n        socket.on('unfriendToClient', newUser =>{\n        dispatch({type:'AUTH', payload: {...auth, user: newUser}})})\n        \n        return ()=>socket.off('unfriendToClient')\n    },[socket,dispatch , auth])\n\n    useEffect(()=>{\n        socket.on('createNotifyToClient', msg =>{\n        dispatch({type:NOTIFY_TYPES.CREATE_NOTIFIES, payload: msg})})\n        \n        return ()=>socket.off('createNotifyToClient')\n    },[socket,dispatch])\n\n    useEffect(()=>{\n        socket.on('removeNotifyToClient', msg =>{\n        dispatch({type:NOTIFY_TYPES.REMOVE_NOTIFIES, payload: msg})})\n        \n        return ()=>socket.off('removeNotifyToClient')\n    },[socket,dispatch])\n    \n    useEffect(()=>{\n        socket.on('addMessageToclient', msg =>{\n        dispatch({type:MESS_TYPE.ADD_MESSAGE, payload: msg})})\n        \n        return ()=>socket.off('addMessageToclient')\n    },[socket,dispatch])\n    return <></>\n}\n\nexport default SocketioClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}