{"ast":null,"code":"import { postDataApi } from '../../utils/fetchDataApi';\nimport { ALERT_TYPES } from './alertActions';\nimport valid from '../../utils/valid';\nexport const TYPES = {\n  AUTH: 'AUTH'\n};\nexport const login = data => async dispatch => {\n  try {\n    dispatch({\n      type: ALERT_TYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataApi('login', data);\n    localStorage.setItem('login', true);\n    dispatch({\n      type: 'AUTH',\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    dispatch({\n      type: ALERT_TYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ALERT_TYPES.ALERT,\n      payload: {\n        error: error.response.data.msg\n      }\n    });\n  }\n};\nexport const refreshToken = () => async dispatch => {\n  const login = localStorage.getItem('login');\n  if (login) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    try {\n      const res = await postDataApi('refresh_token');\n      dispatch({\n        type: 'AUTH',\n        payload: {\n          token: res.data.access_token,\n          user: res.data.user\n        }\n      });\n      dispatch({\n        type: ALERT_TYPES.ALERT,\n        payload: {\n          success: res.data.msg\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: 'ALERT',\n        payload: {\n          error: error.response.data.msg\n        }\n      });\n    }\n  }\n};\nexport const register = data => async dispatch => {\n  try {\n    const check = valid(data);\n    if (check.errLength > 0) {\n      dispatch({\n        type: 'ALERT',\n        payload: check.errMsg\n      });\n    }\n    dispatch({\n      type: \"ALERT\",\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataApi('register', data);\n    console.log(res);\n    dispatch({\n      type: 'AUTH',\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem('login', true);\n    dispatch({\n      type: ALERT_TYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"ALERT\",\n      payload: {\n        error: error.res.data.msg\n      }\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    localStorage.removeItem('login');\n    await postDataApi('logout');\n    window.location.href = \"/\";\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"ALERT\",\n      payload: {\n        error: error.res.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"names":["postDataApi","ALERT_TYPES","valid","TYPES","AUTH","login","data","dispatch","type","ALERT","payload","loading","res","localStorage","setItem","token","access_token","user","success","msg","error","response","refreshToken","getItem","console","log","register","check","errLength","errMsg","logout","removeItem","window","location","href"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/redux/actions/authActions.js"],"sourcesContent":["\nimport {postDataApi} from '../../utils/fetchDataApi';\nimport {ALERT_TYPES} from './alertActions';\nimport valid from '../../utils/valid';\n\nexport const TYPES = {\n    AUTH : 'AUTH'\n}\n\nexport const login = (data) => async (dispatch) =>{\n    \n    try {\n        dispatch({\n            type:ALERT_TYPES.ALERT,\n            payload: {\n                loading:true,\n            }\n        })\n        const res = await postDataApi('login', data)\n        localStorage.setItem('login',true);\n        \n        dispatch({\n            type: 'AUTH',\n            payload:{\n                token:res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        \n\n        dispatch({\n            type:ALERT_TYPES.ALERT,\n            payload:{\n                success:res.data.msg\n            }\n        })\n    } catch (error) {\n        \n        dispatch({\n            type:ALERT_TYPES.ALERT,\n            payload:{\n                error:error.response.data.msg,\n            }\n        })\n    }\n}\n\nexport const refreshToken = () => async( dispatch) => {\n    const login = localStorage.getItem('login')\n    \n    if(login){\n    dispatch({\n        type:'ALERT',\n        payload:{\n            loading:true\n        }\n    })\n\n    try {\n        const res = await postDataApi('refresh_token');\n        dispatch({\n            type: 'AUTH',\n            payload:{\n                token:res.data.access_token,\n                user: res.data.user\n            } \n        })\n        dispatch({\n            type:ALERT_TYPES.ALERT,\n            payload:{\n                success:res.data.msg\n            }\n        })\n\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error:error.response.data.msg\n            }\n        })\n        \n    }\n}}\n\nexport const register = (data) =>async (dispatch) =>{\n    try {\n        const check = valid(data)\n        if(check.errLength > 0) {\n            dispatch({type: 'ALERT' , payload : check.errMsg})\n        }\n        dispatch({type:\"ALERT\",payload: {loading: true}})\n\n        const res =await  postDataApi('register', data)\n        \n        console.log(res)\n        dispatch({\n            type: 'AUTH',\n            payload:{\n                token:res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        \n        localStorage.setItem('login',true);\n        dispatch({\n            type:ALERT_TYPES.ALERT,\n            payload:{\n                success:res.data.msg\n            }\n        })\n\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type:\"ALERT\",\n            payload: {\n                error: error.res.data.msg\n            }\n        })\n    }\n}\n\nexport const logout = () => async (dispatch) =>{\n    try {\n        localStorage.removeItem('login');\n        await postDataApi('logout');\n        window.location.href=\"/\"\n        \n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type:\"ALERT\",\n            payload: {\n                error: error.res.data.msg\n            }\n        })\n    }\n   \n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}