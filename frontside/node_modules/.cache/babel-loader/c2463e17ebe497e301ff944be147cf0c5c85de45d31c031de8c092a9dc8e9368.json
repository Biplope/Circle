{"ast":null,"code":"import{getDataApi,postDataApi,patchDataApi,deleteDataApi}from\"../../utils/fetchDataApi\";export const NOTIFY_TYPES={GET_NOTIFIES:\"GET_NOTIFIES\",CREATE_NOTIFIES:\"CREATE_NOTIFIES\",REMOVE_NOTIFIES:\"REMOVE_NOTIFIES\",UPDATE_NOTIFIES:\"UPDATE_NOTIFIES\",DELETE_NOTIFIES:\"DELETE_NOTIFIES\"};export const createNotify=_ref=>{let{msg,auth,socket}=_ref;return async dispatch=>{try{const res=await postDataApi('notify',msg,auth.token);socket.emit('createNotify',{...res.data.notify,user:{fullname:auth.user.fullname,avatar:auth.user.avatar}});}catch(err){dispatch({type:'ALERT',payload:{error:\"Do not\"}});}};};export const removeNotify=_ref2=>{let{msg,auth,socket}=_ref2;return async dispatch=>{try{const res=await deleteDataApi(\"notify/\".concat(msg.id,\"?url=\").concat(msg.url),auth.token);socket.emit('removeNotify',msg);}catch(err){dispatch({type:'ALERT',payload:{error:\"Do not\"}});}};};export const getNotify=auth=>async dispatch=>{try{const res=await getDataApi(\"notifies\",auth.token);dispatch({type:NOTIFY_TYPES.GET_NOTIFIES,payload:res.data.notifies});}catch(err){dispatch({type:'ALERT',payload:{error:\"Do not\"}});}};export const readnotify=_ref3=>{let{dt,auth}=_ref3;return async dispatch=>{dispatch({type:NOTIFY_TYPES.UPDATE_NOTIFIES,payload:{...dt,isRead:true}});try{const res=await patchDataApi(\"isreadnotify/\".concat(dt._id),null,auth.token);}catch(error){dispatch({type:'ALERT',payload:{error:\"Do not\"}});}};};export const deleteNotifiesAll=auth=>async dispatch=>{dispatch({type:NOTIFY_TYPES.DELETE_NOTIFIES,payload:[]});try{const res=await deleteDataApi(\"deleteallnotify\",auth.token);}catch(error){dispatch({type:'ALERT',payload:{error:\"Do not\"}});}};","map":{"version":3,"names":["getDataApi","postDataApi","patchDataApi","deleteDataApi","NOTIFY_TYPES","GET_NOTIFIES","CREATE_NOTIFIES","REMOVE_NOTIFIES","UPDATE_NOTIFIES","DELETE_NOTIFIES","createNotify","_ref","msg","auth","socket","dispatch","res","token","emit","data","notify","user","fullname","avatar","err","type","payload","error","removeNotify","_ref2","concat","id","url","getNotify","notifies","readnotify","_ref3","dt","isRead","_id","deleteNotifiesAll"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/redux/actions/notifyActions.js"],"sourcesContent":["import {getDataApi, postDataApi , patchDataApi, deleteDataApi} from \"../../utils/fetchDataApi\";\n\nexport const NOTIFY_TYPES = {\n    GET_NOTIFIES:\"GET_NOTIFIES\",\n    CREATE_NOTIFIES:\"CREATE_NOTIFIES\",\n    REMOVE_NOTIFIES:\"REMOVE_NOTIFIES\",\n    UPDATE_NOTIFIES: \"UPDATE_NOTIFIES\",\n    DELETE_NOTIFIES:\"DELETE_NOTIFIES\"\n\n}\nexport const createNotify = ({msg, auth, socket}) => async (dispatch) =>{\n    try {\n        const res = await postDataApi('notify', msg, auth.token)\n        socket.emit('createNotify', {\n            ...res.data.notify,\n            user:{\n            fullname: auth.user.fullname,\n            avatar:auth.user.avatar\n            }\n        })\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: \"Do not\"\n            }\n        })\n    }\n}\n\nexport const removeNotify = ({msg, auth, socket}) => async (dispatch) =>{\n    try {\n        const res = await deleteDataApi(`notify/${msg.id}?url=${msg.url}`, auth.token)\n        socket.emit('removeNotify', msg)\n\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: \"Do not\"\n            }\n        })\n    }\n}\n\nexport const getNotify = (auth) => async (dispatch) =>{\n    try {\n        const res = await getDataApi(`notifies`, auth.token)\n       dispatch({type: NOTIFY_TYPES.GET_NOTIFIES, payload: res.data.notifies})\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: \"Do not\"\n            }\n        })\n    }\n}\n\nexport const readnotify = ({dt , auth}) => async (dispatch) => {\n dispatch({type: NOTIFY_TYPES.UPDATE_NOTIFIES, payload: {...dt, isRead: true}})\n try {\n     const res= await patchDataApi(`isreadnotify/${dt._id}`, null, auth.token)\n\n } catch (error) {\n    dispatch({\n        type:'ALERT',\n        payload:{\n            error: \"Do not\"\n        }\n    })\n }\n}\n\n\nexport const deleteNotifiesAll = ( auth ) => async (dispatch) => {\n    dispatch({type: NOTIFY_TYPES.DELETE_NOTIFIES, payload: [] })\n    try {\n        const res = await deleteDataApi(`deleteallnotify`,  auth.token)\n   \n    } catch (error) {\n       dispatch({\n           type:'ALERT',\n           payload:{\n               error: \"Do not\"\n           }\n       })\n    }\n   }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}