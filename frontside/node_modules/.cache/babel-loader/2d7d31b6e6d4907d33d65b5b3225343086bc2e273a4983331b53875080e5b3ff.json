{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main\\\\Circles\\\\Circle\\\\frontside\\\\src\\\\components\\\\InputPostComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComment } from \"../redux/actions/commentActions\";\nimport \"../styles/CommentStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputPostComment = ({\n  children,\n  pos,\n  comment,\n  onReply,\n  setOnReply\n}) => {\n  _s();\n  const {\n    auth,\n    socket\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!content.trim()) {\n      if (onReply) return setOnReply(false);\n      return;\n    }\n    const newComment = {\n      content,\n      likes: [],\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply.commentId,\n      tag: onReply && onReply.user\n    };\n    dispatch(createComment({\n      pos,\n      newComment,\n      auth,\n      socket\n    }));\n    if (onReply) return setOnReply(false);\n    SetContent(\"\");\n  };\n  const [content, SetContent] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputpostcomments p-1 my-1 bg-light rounded shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: auth.user.avatar,\n        alt: \"User avatar\",\n        className: \"rounded-circle me-3\",\n        style: {\n          width: \"40px\",\n          height: \"40px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Input your opinion\",\n        value: content,\n        onChange: e => SetContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mb-3 ms-3\",\n        onClick: handleSubmit,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }, this);\n};\n_s(InputPostComment, \"t2hxPL701xI6t7THdKTZHUT5usY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = InputPostComment;\nexport default InputPostComment;\nvar _c;\n$RefreshReg$(_c, \"InputPostComment\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","createComment","jsxDEV","_jsxDEV","InputPostComment","children","pos","comment","onReply","setOnReply","_s","auth","socket","state","dispatch","handleSubmit","e","preventDefault","content","trim","newComment","likes","user","createdAt","Date","toISOString","reply","commentId","tag","SetContent","className","src","avatar","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/Circles/Circle/frontside/src/components/InputPostComment.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComment } from \"../redux/actions/commentActions\";\nimport \"../styles/CommentStyle.css\";\n\nconst InputPostComment = ({ children, pos, comment, onReply, setOnReply }) => {\n  const { auth, socket } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!content.trim()) {\n      if (onReply) return setOnReply(false);\n      return;\n    }\n    const newComment = {\n      content,\n      likes: [],\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply.commentId,\n      tag: onReply && onReply.user,\n    };\n\n    dispatch(createComment({ pos, newComment, auth, socket }));\n    if (onReply) return setOnReply(false);\n    SetContent(\"\");\n  };\n  const [content, SetContent] = useState(\"\");\n  return (\n<div className=\"inputpostcomments p-1 my-1 bg-light rounded shadow-sm\">\n      <div className=\"d-flex align-items-center mb-3\">\n        <img src={auth.user.avatar} alt=\"User avatar\" className=\"rounded-circle me-3\" style={{ width: \"40px\", height: \"40px\" }} />\n        {children}\n      </div>\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Input your opinion\"\n          value={content}\n          onChange={(e) => SetContent(e.target.value)}\n        />\n        <button className=\"btn btn-primary mb-3 ms-3\" onClick={handleSubmit}>\n          Post\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default InputPostComment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}