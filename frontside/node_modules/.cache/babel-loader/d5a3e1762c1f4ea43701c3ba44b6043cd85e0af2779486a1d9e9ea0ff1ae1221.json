{"ast":null,"code":"import { getDataApi, postDataApi, patchDataApi, deleteDataApi } from \"../../utils/fetchDataApi\";\nexport const NOTIFY_TYPES = {\n  GET_NOTIFIES: \"GET_NOTIFIES\",\n  CREATE_NOTIFIES: \"CREATE_NOTIFIES\",\n  REMOVE_NOTIFIES: \"REMOVE_NOTIFIES\",\n  UPDATE_NOTIFIES: \"UPDATE_NOTIFIES\",\n  DELETE_NOTIFIES: \"DELETE_NOTIFIES\"\n};\nexport const createNotify = ({\n  msg,\n  auth,\n  socket\n}) => async dispatch => {\n  try {\n    const res = await postDataApi('notify', msg, auth.token);\n    socket.emit('createNotify', {\n      ...res.data.notify,\n      user: {\n        fullname: auth.user.fullname,\n        avatar: auth.user.avatar\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: \"Do not\"\n      }\n    });\n  }\n};\nexport const removeNotify = ({\n  msg,\n  auth,\n  socket\n}) => async dispatch => {\n  try {\n    const res = await deleteDataApi(`notify/${msg.id}?url=${msg.url}`, auth.token);\n    socket.emit('removeNotify', msg);\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: \"Do not\"\n      }\n    });\n  }\n};\nexport const getNotify = auth => async dispatch => {\n  try {\n    const res = await getDataApi(`notifies`, auth.token);\n    dispatch({\n      type: NOTIFY_TYPES.GET_NOTIFIES,\n      payload: res.data.notifies\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: \"Do not\"\n      }\n    });\n  }\n};\nexport const readnotify = ({\n  dt,\n  auth\n}) => async dispatch => {\n  dispatch({\n    type: NOTIFY_TYPES.UPDATE_NOTIFIES,\n    payload: {\n      ...dt,\n      isRead: true\n    }\n  });\n  try {\n    const res = await patchDataApi(`isreadnotify/${dt._id}`, null, auth.token);\n  } catch (error) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: \"Do not\"\n      }\n    });\n  }\n};\nexport const deleteNotifiesAll = auth => async dispatch => {\n  dispatch({\n    type: NOTIFY_TYPES.DELETE_NOTIFIES,\n    payload: []\n  });\n  try {\n    const res = await deleteDataApi(`deleteallnotify`, auth.token);\n  } catch (error) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: \"Do not\"\n      }\n    });\n  }\n};","map":{"version":3,"names":["getDataApi","postDataApi","patchDataApi","deleteDataApi","NOTIFY_TYPES","GET_NOTIFIES","CREATE_NOTIFIES","REMOVE_NOTIFIES","UPDATE_NOTIFIES","DELETE_NOTIFIES","createNotify","msg","auth","socket","dispatch","res","token","emit","data","notify","user","fullname","avatar","err","type","payload","error","removeNotify","id","url","getNotify","notifies","readnotify","dt","isRead","_id","deleteNotifiesAll"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/redux/actions/notifyActions.js"],"sourcesContent":["import {getDataApi, postDataApi , patchDataApi, deleteDataApi} from \"../../utils/fetchDataApi\";\n\nexport const NOTIFY_TYPES = {\n    GET_NOTIFIES:\"GET_NOTIFIES\",\n    CREATE_NOTIFIES:\"CREATE_NOTIFIES\",\n    REMOVE_NOTIFIES:\"REMOVE_NOTIFIES\",\n    UPDATE_NOTIFIES: \"UPDATE_NOTIFIES\",\n    DELETE_NOTIFIES:\"DELETE_NOTIFIES\"\n\n}\nexport const createNotify = ({msg, auth, socket}) => async (dispatch) =>{\n    try {\n        const res = await postDataApi('notify', msg, auth.token)\n        socket.emit('createNotify', {\n            ...res.data.notify,\n            user:{\n            fullname: auth.user.fullname,\n            avatar:auth.user.avatar\n            }\n        })\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: \"Do not\"\n            }\n        })\n    }\n}\n\nexport const removeNotify = ({msg, auth, socket}) => async (dispatch) =>{\n    try {\n        const res = await deleteDataApi(`notify/${msg.id}?url=${msg.url}`, auth.token)\n        socket.emit('removeNotify', msg)\n\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: \"Do not\"\n            }\n        })\n    }\n}\n\nexport const getNotify = (auth) => async (dispatch) =>{\n    try {\n        const res = await getDataApi(`notifies`, auth.token)\n       dispatch({type: NOTIFY_TYPES.GET_NOTIFIES, payload: res.data.notifies})\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n            payload:{\n                error: \"Do not\"\n            }\n        })\n    }\n}\n\nexport const readnotify = ({dt , auth}) => async (dispatch) => {\n dispatch({type: NOTIFY_TYPES.UPDATE_NOTIFIES, payload: {...dt, isRead: true}})\n try {\n     const res= await patchDataApi(`isreadnotify/${dt._id}`, null, auth.token)\n\n } catch (error) {\n    dispatch({\n        type:'ALERT',\n        payload:{\n            error: \"Do not\"\n        }\n    })\n }\n}\n\n\nexport const deleteNotifiesAll = ( auth ) => async (dispatch) => {\n    dispatch({type: NOTIFY_TYPES.DELETE_NOTIFIES, payload: [] })\n    try {\n        const res = await deleteDataApi(`deleteallnotify`,  auth.token)\n   \n    } catch (error) {\n       dispatch({\n           type:'ALERT',\n           payload:{\n               error: \"Do not\"\n           }\n       })\n    }\n   }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}