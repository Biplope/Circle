{"ast":null,"code":"import{patchDataApi,postDataApi,deleteDataApi}from\"../../utils/fetchDataApi\";import{POST_TYPES}from\"./postActions\";import{EditData,DeleteData}from\"./alertActions\";import{createNotify,removeNotify}from\"./notifyActions\";export const createComment=_ref=>{let{pos,newComment,auth,socket}=_ref;return async dispatch=>{const newPost={...pos,commentss:[...pos.commentss,newComment]};dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});try{const data={...newComment,postId:pos._id,postUserId:pos.user._id};const res=await postDataApi('comment',data,auth.token);const newData={...res.data.newComment,user:auth.user};const newPost={...pos,commentss:[...pos.commentss,newData]};dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});socket.emit('createComment',newPost);console.log(newPost);const msg={id:res.data.newComment._id,text:newComment.reply?'mentioned you in comment':'comment on the post',url:\"/post/\".concat(pos._id),recipients:newComment.reply?[newComment.tag._id]:[pos.user._id],content:pos.content,image:pos.images[0].secure_url};dispatch(createNotify({msg,auth,socket}));}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}};};/// open the mongodb and drop the collection of comments...\nexport const updateComment=_ref2=>{let{comment,content,pos,auth}=_ref2;return async dispatch=>{const newComment=EditData(pos.commentss,comment._id,{...comment,content});console.log(newComment);dispatch({type:POST_TYPES.UPDATE_POST,payload:newComment});try{const res=await patchDataApi(\"comment/\".concat(comment._id),{content},auth.token);}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}};};export const likecomment=_ref3=>{let{comment,pos,auth}=_ref3;return async dispatch=>{console.log({comment,pos,auth});const newcomment={...comment,likes:[...comment.likes,auth.user]};const newComments=EditData(pos.commentss,comment._id,newcomment);const newPost={...pos,commentss:newComments};dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});try{const res=await patchDataApi(\"comment/\".concat(comment._id,\"/like\"),null,auth.token);console.log(res);}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}};};export const unlikecomment=_ref4=>{let{comment,pos,auth}=_ref4;return async dispatch=>{console.log({comment,pos,auth});const newcomment={...comment,likes:DeleteData(comment.likes,auth.user._id)};const newComments=EditData(pos.commentss,comment._id,newcomment);const newPost={...pos,commentss:newComments};dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});try{const res=await patchDataApi(\"comment/\".concat(comment._id,\"/unlike\"),null,auth.token);}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}};};export const deleteComment=_ref5=>{let{comment,pos,auth,socket}=_ref5;return async dispatch=>{const deleteArr=[...pos.commentss.filter(cm=>cm.reply===comment._id),comment];const newPost={...pos,commentss:pos.commentss.filter(cm=>!deleteArr.find(da=>cm._id===da._id))};dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});try{deleteArr.forEach(item=>{deleteDataApi(\"comment/\".concat(item._id),auth.token);const msg={id:item._id,text:comment.reply?'mentioned you in comment':'comment on the post',url:\"/post/\".concat(pos._id),recipients:comment.reply?[comment.tag._id]:[pos.user._id]};dispatch(removeNotify({msg,auth,socket}));});socket.emit('deleteComment',newPost);}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}};};","map":{"version":3,"names":["patchDataApi","postDataApi","deleteDataApi","POST_TYPES","EditData","DeleteData","createNotify","removeNotify","createComment","_ref","pos","newComment","auth","socket","dispatch","newPost","commentss","type","UPDATE_POST","payload","data","postId","_id","postUserId","user","res","token","newData","emit","console","log","msg","id","text","reply","url","concat","recipients","tag","content","image","images","secure_url","err","error","response","updateComment","_ref2","comment","likecomment","_ref3","newcomment","likes","newComments","unlikecomment","_ref4","deleteComment","_ref5","deleteArr","filter","cm","find","da","forEach","item"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/redux/actions/commentActions.js"],"sourcesContent":["import {patchDataApi, postDataApi , deleteDataApi} from \"../../utils/fetchDataApi\"\nimport {POST_TYPES} from \"./postActions\"\nimport {EditData, DeleteData} from \"./alertActions\"\nimport {createNotify, removeNotify} from \"./notifyActions\"\n\nexport const createComment = ({pos, newComment, auth, socket}) => async (dispatch) =>{\n \n    const newPost = {...pos , commentss:[...pos.commentss, newComment]} \n    dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost})\n    \n    try {\n        const data={...newComment, postId: pos._id, postUserId: pos.user._id}\n\n        const res= await postDataApi('comment', data, auth.token)\n        const newData = {...res.data.newComment, user:auth.user}\n        const newPost = {...pos, commentss:[...pos.commentss, newData]}\n\n        dispatch({type:POST_TYPES.UPDATE_POST, payload: newPost})\n\n        socket.emit('createComment', newPost)\n       console.log(newPost)\n        const msg = {\n            id: res.data.newComment._id,\n            text: newComment.reply ? 'mentioned you in comment' : 'comment on the post',\n            url: `/post/${pos._id}`,\n            recipients: newComment.reply ?  [newComment.tag._id] : [pos.user._id],\n            content: pos.content,\n            image:pos.images[0].secure_url,\n\n        }\n        dispatch(createNotify({msg, auth, socket}))\n\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: err.response.data.msg\n           }\n   })\n    }\n}   /// open the mongodb and drop the collection of comments...\n\nexport const updateComment = ({comment,content,pos,auth}) => async (dispatch) =>{\n \n    const newComment = EditData(pos.commentss, comment._id, {...comment, content})\n    console.log(newComment)\n    dispatch({type: POST_TYPES.UPDATE_POST, payload : newComment})\n    try {\n        const res= await patchDataApi(`comment/${comment._id}`,{content}, auth.token)\n        \n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: err.response.data.msg\n           }\n   })\n    }\n}\n\nexport const likecomment = ({comment, pos, auth}) => async (dispatch) =>{\n    console.log({comment, pos, auth})\n\n    const newcomment = {...comment, likes:[...comment.likes, auth.user]}\n\n    const newComments = EditData(pos.commentss, comment._id, newcomment)\n\n    const newPost = {...pos, commentss: newComments}\n\n    dispatch({type:POST_TYPES.UPDATE_POST , payload : newPost})\n    try {\n        const res = await patchDataApi(`comment/${comment._id}/like`, null , auth.token)\n        console.log(res)\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: err.response.data.msg\n           }\n   })\n    }\n\n\n}\n\nexport const unlikecomment = ({comment, pos, auth}) => async (dispatch) =>{\n    console.log({comment, pos, auth})\n    const newcomment = {...comment, likes:DeleteData(comment.likes, auth.user._id)}\n\n    const newComments = EditData(pos.commentss, comment._id, newcomment)\n\n    const newPost = {...pos, commentss: newComments}\n\n    dispatch({type:POST_TYPES.UPDATE_POST , payload : newPost})\n\n    try {\n        const res = await patchDataApi(`comment/${comment._id}/unlike`, null , auth.token)\n        \n        \n    } catch(err){\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: err.response.data.msg\n           }\n   })\n    }\n}\n\nexport const deleteComment = ({comment, pos, auth,socket}) => async (dispatch) =>{\n   \n    const deleteArr = [...pos.commentss.filter(cm =>cm.reply === comment._id), comment]\n    const newPost = {\n        ...pos,\n        commentss: pos.commentss.filter(cm=> !deleteArr.find(da => cm._id === da._id))\n    }\n    dispatch({type: POST_TYPES.UPDATE_POST , payload: newPost})\n\n    try {\n        deleteArr.forEach(item=>{\n            deleteDataApi(`comment/${item._id}`, auth.token)\n            const msg = {\n                id: item._id,\n                text: comment.reply ? 'mentioned you in comment' : 'comment on the post',\n                url: `/post/${pos._id}`,\n                recipients: comment.reply?  [comment.tag._id] : [pos.user._id],\n                \n    \n            }\n            dispatch(removeNotify({msg, auth, socket}))\n        })\n\n        socket.emit('deleteComment', newPost)\n    } catch (err) {\n        dispatch({\n            type:'ALERT',\n           payload:{\n            error: err.response.data.msg\n           }\n   })\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}