{"ast":null,"code":"export const checkimage=file=>{let err=\"\";if(!file)return err=\"file not found\";if(file.size>1024*1024)return err=\"file size should be less than 1mb\";if(file.type!=='image/jpeg'&&file.type!==\"image/png\")return err=\"file not supported\";};export const imageupload=async images=>{let imgArr=[];for(const item of images){const formData=new FormData();if(item.camera){formData.append(\"file\",item.camera);}else{formData.append(\"file\",item);}formData.append('upload_preset',\"z6hb8c6y\");formData.append('cloud_name',\"dplj5xisj\");const res=await fetch('https://api.cloudinary.com/v1_1/dplj5xisj/upload',{method:\"POST\",body:formData});const data=await res.json();imgArr.push({public_id:data.public_id,secure_url:data.secure_url});}return imgArr;};","map":{"version":3,"names":["checkimage","file","err","size","type","imageupload","images","imgArr","item","formData","FormData","camera","append","res","fetch","method","body","data","json","push","public_id","secure_url"],"sources":["D:/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/MERN-Social-Media-Network-Using-React-Express-Nodejs-and-MongoDB-main/frontside/src/utils/imageupload.js"],"sourcesContent":["export const checkimage = (file) => {\nlet err=\"\";\nif(!file) return err=\"file not found\"\nif(file.size > 1024*1024) return err=\"file size should be less than 1mb\";\nif(file.type !== 'image/jpeg' && file.type !== \"image/png\") return err=\"file not supported\"\n}\n\nexport const imageupload = async (images) =>{\n    let imgArr = []\n    for (const item of images){\n        const formData = new FormData();\n        if(item.camera) {\n            formData.append(\"file\", item.camera)\n        } else {\n        formData.append(\"file\",item )\n        }\n\n        formData.append('upload_preset', \"z6hb8c6y\")\n        formData.append('cloud_name', \"dplj5xisj\")\n\n        const res = await fetch('https://api.cloudinary.com/v1_1/dplj5xisj/upload', {\n            method: \"POST\",\n            body: formData\n\n\n        })\n\n        const data = await res.json()\n        imgArr.push({public_id:data.public_id, secure_url:data.secure_url})\n        \n\n    }\n    return imgArr;\n}\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,UAAU,CAAIC,IAAI,EAAK,CACpC,GAAI,CAAAC,GAAG,CAAC,EAAE,CACV,GAAG,CAACD,IAAI,CAAE,MAAO,CAAAC,GAAG,CAAC,gBAAgB,CACrC,GAAGD,IAAI,CAACE,IAAI,CAAG,IAAI,CAAC,IAAI,CAAE,MAAO,CAAAD,GAAG,CAAC,mCAAmC,CACxE,GAAGD,IAAI,CAACG,IAAI,GAAK,YAAY,EAAIH,IAAI,CAACG,IAAI,GAAK,WAAW,CAAE,MAAO,CAAAF,GAAG,CAAC,oBAAoB,CAC3F,CAAC,CAED,MAAO,MAAM,CAAAG,WAAW,CAAG,KAAO,CAAAC,MAAM,EAAI,CACxC,GAAI,CAAAC,MAAM,CAAG,EAAE,CACf,IAAK,KAAM,CAAAC,IAAI,GAAI,CAAAF,MAAM,CAAC,CACtB,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/B,GAAGF,IAAI,CAACG,MAAM,CAAE,CACZF,QAAQ,CAACG,MAAM,CAAC,MAAM,CAAEJ,IAAI,CAACG,MAAM,CAAC,CACxC,CAAC,IAAM,CACPF,QAAQ,CAACG,MAAM,CAAC,MAAM,CAACJ,IAAK,CAAC,CAC7B,CAEAC,QAAQ,CAACG,MAAM,CAAC,eAAe,CAAE,UAAU,CAAC,CAC5CH,QAAQ,CAACG,MAAM,CAAC,YAAY,CAAE,WAAW,CAAC,CAE1C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,kDAAkD,CAAE,CACxEC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEP,QAGV,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAC7BX,MAAM,CAACY,IAAI,CAAC,CAACC,SAAS,CAACH,IAAI,CAACG,SAAS,CAAEC,UAAU,CAACJ,IAAI,CAACI,UAAU,CAAC,CAAC,CAGvE,CACA,MAAO,CAAAd,MAAM,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}